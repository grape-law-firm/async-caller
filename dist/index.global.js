"use strict";(()=>{var c=class{_tokens;_capacity;_fillPerWindow;_windowInMs;_timerId=null;_waitQueue=[];verbose;_nextRefillDate;_ongoingForcedStop=!1;constructor(e,t=!1){this.verbose=t,this.validate(e),this._capacity=e.capacity,this._tokens=e.initialTokens??e.capacity,this._fillPerWindow=e.fillPerWindow,this._windowInMs=e.windowInMs,this._startInternal(),this.logRemaniningTokensPeriodically()}logRemaniningTokensPeriodically(){this.verbose&&setInterval(()=>{this._timerId&&console.log(`TokenBucket: Remaining tokens: ${this._tokens}`)},1e4)}forceWaitUntilMilisecondsPassed(e){this._ongoingForcedStop||(this._nextRefillDate=new Date(Date.now()+e),this.verbose&&console.log(`TokenBucket: Forcing stop. Will start to refill in ${Math.floor(e/1e3)} seconds`),this._ongoingForcedStop=!0,this._tokens=0,this.stop(),setTimeout(()=>{this._tokens=this._capacity,this._startInternal(),this._tryResolveWaiting(),this._ongoingForcedStop=!1,this.verbose&&console.log("TokenBucket: Forced stop ended")},e))}validate(e){if(!e)throw new Error("Options are required");if(e.capacity<=0)throw new Error("Capacity must be greater than 0");if(e.fillPerWindow<=0)throw new Error("Fill per window must be greater than 0");if(e.windowInMs<=0)throw new Error("Window in ms must be greater than 0");if(e.initialTokens!==void 0&&(e.initialTokens<0||e.initialTokens>e.capacity))throw new Error("Initial tokens must be between 0 and capacity");if(e.fillPerWindow>e.capacity)throw new Error("Fill per window must be less than or equal to capacity")}_startInternal(){return this._nextRefillDate=new Date(Date.now()+this._windowInMs),this._timerId||(this._timerId=setInterval(()=>{this._nextRefillDate=new Date(Date.now()+this._windowInMs),this._tokens<this._capacity?(this._addToken(),this._tryResolveWaiting()):(this.stop(),this.verbose&&console.log("TokenBucket: Bucket is full, stopping the timer"))},this._windowInMs)),this}start(){return this._startInternal()}stop(){this._timerId&&(clearInterval(this._timerId),this._timerId=null)}get capacity(){return this._capacity}get tokens(){return this._tokens}_addToken(){this._tokens=Math.min(this._tokens+this._fillPerWindow,this._capacity)}consume(e=1){return!this._timerId&&!this._ongoingForcedStop&&this._startInternal(),this._tokens>=e?(this._tokens-=e,!0):!1}async consumeAsync(e=1){if(!this._timerId&&!this._ongoingForcedStop&&this._startInternal(),this._tokens>=e)return await Promise.resolve(this.consume(e));if(this.verbose){let t=this._nextRefillDate?.getTime()?this._nextRefillDate.getTime()-Date.now():void 0,r=t?Math.floor(t/1e3):"unknown";console.log(`TokenBucket: Not enough tokens now. Will refill in ${r} seconds.`)}return await new Promise(t=>{this._waitQueue.push(()=>{t(this.consume(e))})})}_tryResolveWaiting(){for(;this._tokens>0&&this._waitQueue.length>0;){let e=this._waitQueue.shift();e&&e()}}};var d={capacity:10,fillPerWindow:1,windowInMs:100},f={maxRetries:3,minDelayInMs:1e3,maxDelayInMs:1e4,backoffFactor:2},u=class{_tokenBucket;_retryOptions;_concurrency;runningTasks=0;queue;verbose;constructor(e,t=!1){this.verbose=t,this._tokenBucket=new c(e?.tokenBucketOptions??d,this.verbose),this._retryOptions=e?.retryOptions??f,this._concurrency=e?.concurrency??5,this.queue=[]}async call(e){return await new Promise(t=>{this.queue.push(t),this.processTaskQueue()}),await this.executeAndHandleErrors(e)}processTaskQueue(){for(;this.runningTasks<this._concurrency&&this.queue.length>0;){this.runningTasks++;let e=this.queue.shift();e&&(this.verbose&&console.log(`AsyncCaller: Running task... Concurrency: (${this.runningTasks} / ${this._concurrency}) (Queue length: ${this.queue.length})`),e())}}async extractErrorMessageFromResponse(e){try{let r=await e.json();return r.error?JSON.stringify(r.error):r.message?r.message:r.error_message?r.error_message:r.errors?JSON.stringify(r.errors):void 0}catch{return}}async executeWithRetry(e,t=1,r=void 0,o=void 0){let i=!1;for(;!await this._tokenBucket.consumeAsync(););if(t>this._retryOptions.maxRetries+1){this.verbose&&console.log("AsyncCaller: Max retries exceeded. Rejecting...");let s=new Error("Max retries exceeded.");if(o)s=o;else if(r){let n=await this.extractErrorMessageFromResponse(r);n&&(s=new Error(n))}throw s}return e().then(async s=>{let n=s;if(this.isRateLimitedError(n)){let l=this.calculateRetryDelay(t,n.headers);return await new Promise(h=>setTimeout(()=>{h()},l)),this.executeWithRetry(e,t+1,n,o)}else{if(this.isClientSideError(n))throw i=!0,s;return s}}).catch(async s=>{if(i)return s;if(t===this._retryOptions.maxRetries+1)throw this.verbose&&console.log("AsyncCaller: Max retries exceeded. Rejecting..."),s;if(this.isRateLimitedError(s)){let n=this.calculateRetryDelay(t,s.headers??s.response?.headers);return await new Promise(l=>setTimeout(()=>{l()},n)),this.executeWithRetry(e,t+1,r,s)}else{if(this.isClientSideError(s))throw s;{let n=this.calculateDefaultDelay(t);return await new Promise(l=>setTimeout(()=>{l()},n)),this.executeWithRetry(e,t+1,s)}}})}async executeAndHandleErrors(e){try{return await this.executeWithRetry(e,1,void 0)}finally{this.runningTasks--,this.processTaskQueue()}}isClientSideError(e){let t=this.extractStatusCodeProperties(e);for(let r of t)if(r>=400&&r<500)return this.verbose&&(console.log(`AsyncCaller: Client side error detected. Status code: ${r}`),console.log(JSON.stringify(e))),!0;return!1}isRateLimitedError(e){let t=this.extractStatusCodeProperties(e);for(let r of t)if(r===429)return this.verbose&&console.log("AsyncCaller: Too many requests detected."),!0;return!1}extractStatusCodeProperties(e){return[e?.status,e?.response?.status,e?.statuscode,e?.response?.statuscode].filter(r=>typeof r=="number"&&!Number.isNaN(r))}calculateRetryDelay(e,t){if(t){let r;if(typeof t.get=="function"?r=t.get("Retry-After"):r=t["Retry-After"],r){let o=Number.parseInt(r)*1e3;if(Number.isNaN(o))if(Date.parse(r)>0){let i=new Date().getTime(),s=new Date(r).getTime(),n=Math.max(s-i,0);return this._tokenBucket.forceWaitUntilMilisecondsPassed(n),n}else return this.calculateDefaultDelay(e);else return this._tokenBucket.forceWaitUntilMilisecondsPassed(o),o}else return this.calculateDefaultDelay(e)}else return this.calculateDefaultDelay(e)}calculateDefaultDelay(e){return Math.min(this._retryOptions.minDelayInMs*this._retryOptions.backoffFactor**(e-1),this._retryOptions.maxDelayInMs)}};var y=(i=>(i[i.Milliseconds=1]="Milliseconds",i[i.Seconds=1e3]="Seconds",i[i.Minutes=6e4]="Minutes",i[i.Hours=36e5]="Hours",i[i.Days=864e5]="Days",i))(y||{});function _(a){if(!a)return"";let e=/(\d{4})([A-Z]{3})(\d{2})(\s*)(.*)/,t=a.match(e);if(!t||t.length<6)return a;let r=t[3];return r==="01"?t[5]:t[5].trim()+" "+r}})();
//# sourceMappingURL=index.global.js.map